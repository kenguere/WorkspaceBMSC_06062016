/*Generated by Lua2JS*/

/**
 * 
 * Method Description: captures transactionDataLoad event of form , call function to set configuration
 * method transactionDataLoadFrmPaymentsSelectBillVA
 *
 */
function transactionDataLoadFrmLoanPayAndTdcSelectBillVA(  ){
	/*var dt = new Date();
	 var initialTime = dt.getTime();*/
	setConfigurationFrmLoanPayAndTdcSelectBillVA();
	/*var dt2 = new Date();
      var finalTime = dt2.getTime();
      logTimeGapVA(initialTime,finalTime,"@PaymentsSelectBill TxLoad");
      if(gEventTrackerVA["PaymentsSelectBill-TxLoad"]==null || 
    			gEventTrackerVA["PaymentsSelectBill-TxLoad"]==undefined){
    		    	  gEventTrackerVA["PaymentsSelectBill-TxLoad"] = getTimeDifferenceVA(initialTime,finalTime);  
    		      }*/
}

/**
 * 
 * Method Description: captures transactionDataLoad event of form , set form configurations
		  which would apply throughout the application.
 * method setConfigurationFrmPaymentsSelectBillVA <type>
 *
 */
function setConfigurationFrmLoanPayAndTdcSelectBillVA(  ){

	frmLoanPayAndTdcSelectBillVA.lblHeaderVA.text=geti18nValueVA("i18n.phone.frmLoanPayAndTdcSelectBillVA.lblHeaderVA.textVA");
	
	frmLoanPayAndTdcSelectBillVA.segBillerListVA.widgetDataMap = {
		lblBillVA : "accountDisplay",
		imgLineSeparatorVA : "line",
		imgTickVA : "imgTickVA",
		lblFechaVencimientoTexVA: "lblFechaVencimientoTextVA",
		lblFechaVencimientoVA : "pFechaVencimiento",
		lblCuotaOPagoMinimoTextVA:"lblCuotaOPagoMinimoTextVA",
		lblCuotaOPagoMinimoVA: "lblCuotaOPagoMinimo",
		lblSaldoOFechaCorteTextVA:"lblSaldoOFechaCorteTextVA",
		lblSaldoOFechaCorteVA: "lblFechaCorteOSaldo",
		lblSaldoOnotaTextVA:"lblTotalDeudaOnotaTextVA",
		lblSaldoOnotaVA:"lblTotalDeudaoNota" 
	};
	
}
/**
 * 
 * Method Description: show form , initialize first if needed
 * method showFrmLoanPayAndTdcSelectBillVA <type>
 *
 */
function showFrmLoanPayAndTdcSelectBillVA(  ){
	initFrmLoanPayAndTdcSelectBillVA();
}

//Form is shown in service call back function as per the best practice
//form.show(frmLoanPayAndTdcSelectBillVA)

/**
 * 
 * Method Description: Initializes form before showing. 
 * method initFrmLoanPayAndTdcSelectBillVA <type>
 *
 */
function initFrmLoanPayAndTdcSelectBillVA(  ){
	getLoanAndTdcBillersListVA();
}

/**
 * 
 * Method Description: Get the Billers list from the server
 * method getLoanAndTdcBillersListVA <type>
 *
 */
function getLoanAndTdcBillersListVA(  ){
	
	/*var inputparam = [  ];
	var dt = new Date();
	gServiceCallLoggerVA["GetBillersList"]=dt.getTime();
	inputparam = { serviceID : "GetBillersList", cid : gCustomerIdVA } ;*/
	 
	var inputparam = { 
		serviceID : "GetLoanAndTdcBillersListBMSC",
	    pIdioma : gIdiomaVA, 
		pNombreUsuario : gUserNameVA, 	
		pTipoProducto : "tcpre", 		//Sybven: Filtrado por TDC y Prétamo
		pTransaccion : "0", 
		customerID : gCustomerIdVA,
		instance : geti18nValueVA("preference.common.application.DefaultProfileName"),
		locale : gLocaleVA,
		deviceChannel : getChannelTypeVA(), 
		deviceID : gDeviceIdVA
	};
		
	invokeServiceAsyncVA(inputparam, getLoanAndTdcBillersListCallBackVA );
	kony.print("=============Gustavo========="+JSON.stringify(inputparam));
}

/**
 * 
 * Method Description: callback function for service call 'getLoanAndTdcBillersLis' ,set global variables for  pagination and
		  call function populateSegLoanAndTdcBillerListVA with returned biller list from server.
 * method getLoanAndTdcBillersListCallBackVA
 * @param status
 * @param asyncResponse <type>
 *
 */
function getLoanAndTdcBillersListCallBackVA( status, asyncResponse ){
	kony.print("getLoanAndTdcBillersListCallBackVA status" + status);
	if((status == 400)){
	/*var dt = new Date();
	var initialTime = dt.getTime();
	logTimeGapVA(gServiceCallLoggerVA["GetBillersList"],
	 initialTime, "service:GetBillersList ");
	if(gEventTrackerVA["dashboard-service-GetBillersList"]==null || 
			  gEventTrackerVA["dashboard-service-GetBillersList"]==undefined){
				gEventTrackerVA["dashboard-service-GetBillersList"]=
				getTimeDifferenceVA(gServiceCallLoggerVA["GetBillersList"],initialTime);
			}
	
	logStartTimeVA("dashboard-service-GetBillersList-callback");
	var initDate = new Date();
	var initTime = initDate.getTime();
	*/
		var resultTable = getAsyncCallResponseVA(status, asyncResponse);
		kony.print("waya List Loan/TDC" + JSON.stringify(resultTable));
		if((resultTable == null)){
			return ;
		}else if(resultTable.pCodigoRespuesta != "0"){
		hideLoadingVA();		
		showAlertErrorVA(geti18nValueVA("i18n.phone.frmPaymentsConfirmationVA.MakePaymentServiceNoDataReturned.alertVA"));
		}else{
			gCurrentPageOfBillerListVA = 1;
			gTotalNoOfBillerListPagesVA = 1;
			gTotalNoOfBillerListPagesVA = kony.os.toNumber(resultTable.totalNoOfTransferAccountsPages);  //gTotalNoOfBillerListPagesVA = kony.os.toNumber(resultTable.totalNoOfPayeeListPages);
			kony.print("waya List Loan/TDC cuentas" + JSON.stringify(resultTable.account));
			kony.print("Paginacion========" + gTotalNoOfBillerListPagesVA);
			
//Sybven Kender Astudillo 07/03/2016			
			if(resultTable.account == 0 || resultTable.account == null || resultTable.account == "" ){
			
				showAlertInfoVA(geti18nValueVA("i18n.phone.frmPaymentsSelectBillVA.NoData.alertVA"));
				hideLoadingVA();
							
			}else{
				
				populateSegLoanAndTdcBillerListVA(resultTable.account);
				hideLoadingVA();
				frmLoanPayAndTdcSelectBillVA.show ();
			}
			
//			hideLoadingVA();
//			frmLoanPayAndTdcSelectBillVA.show ();
		
		}
		/*logEndTimeVA("dashboard-service-GetBillersList-callback");
		var endDate = new Date();
		  var endTime = endDate.getTime();
		if(gEventTrackerVA["dashboard-service-GetBillersList-callback"]==null || 
				  gEventTrackerVA["dashboard-service-GetBillersList-callback"]==undefined){
					gEventTrackerVA["dashboard-service-GetBillersList-callback"]=
					getTimeDifferenceVA(initTime,endTime);
				}*/
	}
	
}

/**
 * 
 * Method Description: set data to segment segBillerListVA
 * method populateSegBillerListVA
 * @param billersData <type>
 *
 */
function populateSegLoanAndTdcBillerListVA( receivedTable){
	kony.print("paginacion segmento" + JSON.stringify(receivedTable));
	/*variables para mapear la data*/
	var imgTick = "";
	var imgSeparator = geti18nValueVA("preference.phone.application.SegmentSeparatorImage.valueVA");
	var tLblFechaVencimiento=geti18nValueVA("frmLoanPayAndTdcSelectBillVA.lblFechaDeVencimientoVA.textVA");
	
	var tLblNote=geti18nValueVA("frmLoanPayAndTdcSelectBillVA.lblNoteVA.textVA");
	var tLblPagoMinimo=geti18nValueVA("frmLoanPayAndTdcSelectBillVA.lblPagoMinimoVA.textVA");
	var tLblFechaDeCorte=geti18nValueVA("frmLoanPayAndTdcSelectBillVA.lblFechaDeCorteVA.textVA");
	var tLblTotalDeuda=geti18nValueVA("frmLoanPayAndTdcSelectBillVA.lblTotalDeudaVA.textVA");
	var tLblCuota=geti18nValueVA("frmLoanPayAndTdcSelectBillVA.lblCuotaVA.textVA");
	var tLblNota=geti18nValueVA("frmLoanPayAndTdcSelectBillVA.lblNoteVA.textVA");
	var tLblSaldoTotal=geti18nValueVA("frmLoanPayAndTdcSelectBillVA.lblSaldoTotalVA.textVA");
	//text
	
	var i=0;
	var v = "";
	var j=0;
	if(!isNilOrEmptyTableVA(receivedTable)){
		var formatedFromResult = [  ];
		var k = 0;
		for (i=0; i < receivedTable.length; i++ ){
	    	v = receivedTable[ i ]; //accedemos al objeto
		    kony.print("waya Valor de v[" + i + "]: " + JSON.stringify(v));
		    for ( k in v ){ //k -> nombre de la propidad en este caso "3" o "5"
		    	kony.print("waya Valor de k: " + k);
		    	var l = v[ k ]; //acedemos al elemento relacionado a la propiedad 3:arreglo de tdc, 5: arreglo de prestamos  
		    	kony.print("waya Valor de l: " + JSON.stringify(l));
		    	var tipoDeCuenta = l[0].accountDisplayLabel;
		    	var singleTypeTable = [ [ tipoDeCuenta, l ] ];
		    	kony.table.append(formatedFromResult, singleTypeTable);
		    }
		}
		kony.print("waya format sin configurar" + JSON.stringify(formatedFromResult));
		//inicio
		kony.print("formatedFromResult 1: " + formatedFromResult);
		var formatedFormRsltLen = formatedFromResult.length;
		if((formatedFromResult) != null){
			for (i=0;i < formatedFormRsltLen; i++ ){
			    v = formatedFromResult[ i ]; //en la posicion 0 tenemos tdc ,[objetos tdc] en la 1 tenemos prestamos,[objetos prestamos]
			    for ( j in v[ 1 ] ){
			    	kony.print("waya Valor de j para configurar: " + JSON.stringify(j));
			    	var u = v[ 1 ][ j ]; //obtenemos cada tdc o cuenta para configurar
					kony.print("waya Valor de u para configurar: " + JSON.stringify(u));	
			    	if((u != null)){
			    		imgTick = geti18nValueVA("preference.phone.application.TransparentTickImage.valueVA");
			    		if((gTransfersFromAccountIDVA != null && gTransfersFromAccountIDVA == u.AccountAliasID)){
			    			imgTick = geti18nValueVA("preference.phone.application.SelectedTickImage.valueVA");
			    		}
		                
			    		u.line = imgSeparator + "";
			    		u.imgTickVA = imgTick;
			    		u.accountID = u.AccountAliasID + "";
			    		u.lblFechaVencimientoTextVA=tLblFechaVencimiento+"";
			    		
			    		//Configuracion determinados por el tipo de producto 3->TDC 5->Prestamo
			    		if((u.accountType=="3")){
			    		    //text
							u.lblCuotaOPagoMinimoTextVA=tLblPagoMinimo;
			    			u.lblSaldoOFechaCorteTextVA=tLblFechaDeCorte;
			    			u.lblTotalDeudaOnotaTextVA=tLblTotalDeuda;
			    			//parametros mapeados
			    			u.accountDisplay =u.pDescProducto+" "+ u.accountNumber+" "+ u.pDescTipoCuenta+"";
							u.lblCuotaOPagoMinimo =u.pAbrevMoneda + " " + u.pPagoMinimo+"";
			    			u.lblFechaCorteOSaldo=u.pFechaCorte+"";
			    			u.lblTotalDeudaoNota=u.pAbrevMoneda+" "+ u.pTotalDeuda+""; 
			    		}else if(u.accountType=="5"){
			    		    //text
							u.lblCuotaOPagoMinimoTextVA=tLblCuota;
			    			u.lblSaldoOFechaCorteTextVA=tLblSaldoTotal;
			    			u.lblTotalDeudaOnotaTextVA=tLblNota;
			    			//parametros mapeados
			    			u.accountDisplay =u.pDescTipoCuenta+" "+ u.accountNumber+"";
			    			u.lblCuotaOPagoMinimo = u.pAbrevMoneda+" " + u.pTotalDeuda;//Gustavo contatenacion de espacio
			    			u.lblFechaCorteOSaldo=u.pAbrevMoneda+" "+ u.pSaldoTotal+"";
			    			u.lblTotalDeudaoNota=u.pNotas+"";
			    			
			    		}
			    		
			    	}
			    }
			}
		}
		kony.print("formatedFromResult final: " + JSON.stringify(formatedFromResult));
        //Fin
		frmLoanPayAndTdcSelectBillVA.segBillerListVA.setData(formatedFromResult);
		
		//Configure Bottom Pagination Bar
		hideRelevantPaginationButtonsVA(gCurrentPageOfBillerListVA, gTotalNoOfBillerListPagesVA, frmLoanPayAndTdcSelectBillVA);
	}else{	
		showAlertInfoVA(geti18nValueVA("i18n.phone.frmPaymentsSelectBillVA.NoData.alertVA"));
		
	}
	
	
}
/**
 * 
 * Method Description: captures click event on segment SegBillerListVA , navigate to payments home with selected item
 * method onClickSegBillerListVA
 *
 */
function onClickSegLoanAndTdcBillerListVA(  ){
   /*Williams Blanco
    TDC/Prestamo al parecer no hay que llamar servicio para obatener la deuda
   */
   kony.print("waya selected: " + JSON.stringify(frmLoanPayAndTdcSelectBillVA.segBillerListVA.selectedItems[0]))
	if((frmLoanPayAndTdcSelectBillVA.segBillerListVA.selectedItems[0] != null)){ 
	     //parametros de entrada provenientes de prestamo o TDC para pagos
		gServiceType = frmLoanPayAndTdcSelectBillVA.segBillerListVA.selectedItems[0].accountType; // de esta manera sabremos que servicio llamar
        gToAccID = frmLoanPayAndTdcSelectBillVA.segBillerListVA.selectedItems[0].AccountAliasID + ""; //cuenta Prestamo/Tdc      
		loanPayAndTdcBillSelectedVA(frmLoanPayAndTdcSelectBillVA.segBillerListVA.selectedItems[0]);
	
	}
}

/**
 * 
 * Method Description: callback function for obtenerDeudaServicioBMSC
 * method getDebtCallBackVA
 * @param status
 * @param asyncResponse <type>
 *
 */
 //Sybven Ricardo Delli Carpini, callback nuevo para el servicio obtenerDeudaServicioBMSC
function getLoanAndTdcDebtCallBackVA( status, asyncResponse ){
	kony.print("getDebtCallBackVA " + status);
	if((status == 400)){
		var resultTable = getAsyncCallResponseVA(status, asyncResponse);
		if((resultTable == null)){
			return ;
		}
		kony.print("resultTable Prueba1" + JSON.stringify(resultTable));
		hideLoadingVA();
		gcodigoRespuestaDeuda = resultTable.pCodigoRespuesta;
		
		if(gcodigoRespuestaDeuda != "0" || gcodigoRespuestaDeuda == null || gcodigoRespuestaDeuda == ""){
		   showAlertErrorVA(geti18nValueVA("i18n.phone.frmPaymentsSelectBillVA.InvalidResponse.validationVA"));
		
		}else if (gcodigoRespuestaDeuda == "0"){
		
			var monto = resultTable.pMontoPago;
			var idpago = resultTable.pIDPago;
		    //Sybven Ricardo Delli Carpini, condicion para validar monto y id de pago nulo o vacio
		    if(monto == null || monto == "" || idpago == null || idpago == ""){
		       showAlertErrorVA(geti18nValueVA("i18n.common.application.NetworkAlert.error.AlertVA"));
	           hideLoadingVA();
	           
		    }else{
		
		    //Sybven Ricardo Delli Carpini, se definen varias variables globales se usan dentro de PaymentsHome
		    gAmountToPay = resultTable.pMontoPago;
		    gTypeofCoin = resultTable.pTipoMonedaPago;
		    gDescTypeofCoin = resultTable.pAbrevMoneda;
		    gIDPay = resultTable.pIDPago;
	        loanPayAndTdcBillSelectedVA(frmLoanPayAndTdcSelectBillVA.segBillerListVA.selectedItems[0]);
	        //nombre anterior paymentsBillSelectedVA
	        }
	}else{
	showAlertErrorVA(geti18nValueVA("i18n.phone.frmPaymentsSelectBillVA.InvalidResponse.validationVA"));
	hideLoadingVA();
	}
	}
 }
 
  /**
 * 
 * Method Description: on click next in bottom Pagination bar
 * method billersListPaginationNextVA
 *
 */
function loanAndTdcBillersListPaginationNextVA(  ){
	if((gCurrentPageOfBillerListVA >= gTotalNoOfBillerListPagesVA)){
		return ;
	}
	var pageNo = 0;
	pageNo = gCurrentPageOfBillerListVA + 1;
	var inputparam = { serviceID : "PaginationService", pageNo : pageNo, service : "transfersFrom"} ;//var inputparam = { serviceID : "PaginationService", pageNo : pageNo, service : "payeeList" } ;
	kony.print("inputparam" + inputparam);
	invokeServiceAsyncVA(inputparam, loanAndTdcbillersListPaginationServiceVA);
	kony.print("=============Gustavo=========prestamos"+JSON.stringify(inputparam));
}

/**
 * 
 * Method Description: on click previous in bottom Pagination bar
 * method billersListPaginationPreviousVA
 *
 */
function loanAndTdcBillersListPaginationPreviousVA(  ){  
	if((gCurrentPageOfBillerListVA <= 1)){
		return ;
	}
	var pageNo = 0;
	pageNo = gCurrentPageOfBillerListVA - 1;
	var inputparam = { serviceID : "PaginationService", pageNo : pageNo, service : "transfersFrom" } ;
	kony.print("inputparam" + inputparam);
	invokeServiceAsyncVA(inputparam, loanAndTdcbillersListPaginationServiceVA);
}

/**
 * 
 * Method Description: Pagination service call back
 * method billersListPaginationServiceVA
 * @param status
 * @param asyncResponse <type>
 *
 */
function loanAndTdcbillersListPaginationServiceVA( status, asyncResponse ){ 
	if((status == 400)){
		var resultTable = getAsyncCallResponseVA(status, asyncResponse);
		if((resultTable == null)){
			kony.print("paginacion is null");
			return ;
		}
		hideLoadingVA();
		gCurrentPageOfBillerListVA = kony.os.toNumber(resultTable.pageNo);
		kony.print("paginacion datos " + JSON.stringify(resultTable.data));
		populateSegLoanAndTdcBillerListVA(resultTable.data);
		kony.print("======Gustavo numero paginacion======="+JSON.stringify(gCurrentPageOfBillerListVA));
	}
}



/*
*****************************************************************************************************************************************
*     Name    : preShowFrmPaymentsSelectBillVA
*     Purpose : This is called in the preshow to set the text of the back button.This is suggested by platform as a fix to DEF2970
*****************************************************************************************************************************************
--*/

function preShowFrmLoanAndTdcSelectBillVA(){
  if(gDeviceNameVA == "iPhone"){
   //var backbtn = geti18nValueVA("i18n.phone.frmPaymentsSelectBillVA.BtnBackiPhone.TextVA");
   var backbtn = geti18nValueVA("i18n.phone.application.BtnBack.TextVA");
   frmLoanPayAndTdcSelectBillVA.setTitleBarLeftSideButton(backbtn,"","");
  }
}
/*End generated*/